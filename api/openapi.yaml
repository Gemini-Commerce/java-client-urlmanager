openapi: 3.0.1
info:
  contact:
    email: info@gemini-commerce.com
    name: Gemini Team
  description: |-
    The URL Manager service provides a set of APIs for managing URL rewrites within your application. URL rewriting is a technique used to modify the appearance or structure of URLs while maintaining the functionality and accessibility of the underlying resources.

    The URL Manager service offers various operations to create, retrieve, update, and delete URL rewrite configurations. These configurations allow you to define rules that map incoming URLs to different paths or destinations based on specific criteria. By using URL rewriting, you can enhance the user experience, improve SEO (Search Engine Optimization), and manage complex URL structures effectively.

    To get started with the URL Manager service, you need to integrate the provided Proto API into your application. The API supports various programming languages and frameworks, making it easy to incorporate URL rewriting functionality into your existing codebase.

    Once integrated, you can utilize the different API methods to create, manage, and query URL rewrite configurations based on your application's requirements.

    Refer to the API documentation for detailed information on the request and response formats, authentication requirements, and example usage of each API method.
  license:
    name: Gemini fair use license
    url: https://gemini-commerce.com/api/fair-use-license
  title: Url Manager Service
  version: 1.0.0
servers:
- url: https://urlmanager.api.gogemini.io/
security:
- Authorization: []
tags:
- description: Url Manager Description
  externalDocs:
    url: https://gemini-commerce.com/api/urlmanager
  name: UrlManager
paths:
  /urlmanager.UrlManager/ChangeUrlRewriteRequestPath:
    post:
      description: Modify the request path of a specific URL rewrite configuration.
      operationId: UrlManager_ChangeUrlRewriteRequestPath2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/urlmanagerChangeUrlRewriteRequestPathRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/urlmanagerChangeUrlRewriteRequestPathResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Change Url Rewrite Request Path
      tags:
      - Basic Operations
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /urlmanager.UrlManager/CreateUrlRewrite:
    post:
      description: Create a new URL rewrite configuration with customizable rules.
      operationId: UrlManager_CreateUrlRewrite2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/urlmanagerCreateUrlRewriteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/urlmanagerUrlRewrite'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Create Url Rewrite
      tags:
      - Basic Operations
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /urlmanager.UrlManager/DeleteUrlRewrite:
    post:
      description: Delete an existing URL rewrite configuration.
      operationId: UrlManager_DeleteUrlRewrite2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/urlmanagerDeleteUrlRewriteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/urlmanagerDeleteUrlRewriteResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Delete Url Rewrite
      tags:
      - Basic Operations
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /urlmanager.UrlManager/GetUrlRewrite:
    post:
      description: Retrieve the details of a specific URL rewrite configuration.
      operationId: UrlManager_GetUrlRewrite2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/urlmanagerGetUrlRewriteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/urlmanagerUrlRewrite'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get Url Rewrite
      tags:
      - Basic Operations
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /urlmanager.UrlManager/ListUrlRewrites:
    post:
      description: Retrieve a list of all URL rewrite configurations in your application.
      operationId: UrlManager_ListUrlRewrites2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/urlmanagerListUrlRewritesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/urlmanagerListUrlRewritesResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: List Url Rewrites
      tags:
      - Basic Operations
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /urlmanager.UrlManager/ListUrlRewritesByTargetPaths:
    post:
      description: Retrieve URL rewrite configurations based on target paths.
      operationId: UrlManager_ListUrlRewritesByTargetPaths2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/urlmanagerListUrlRewritesByTargetPathsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/urlmanagerListUrlRewritesByTargetPathsRequest'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: List Url Rewrites By Target Paths
      tags:
      - Basic Operations
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /urlmanager.UrlManager/ResolveUrlRewrite:
    post:
      description: Resolve and retrieve the rewritten URL for a given input URL.
      operationId: UrlManager_ResolveUrlRewrite2
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/urlmanagerResolveUrlRewriteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/urlmanagerUrlRewrite'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Resolve Url Rewrite
      tags:
      - Basic Operations
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /urlmanager/change_url_rewrite_request_path:
    post:
      description: Modify the request path of a specific URL rewrite configuration.
      operationId: UrlManager_ChangeUrlRewriteRequestPath
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/urlmanagerChangeUrlRewriteRequestPathRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/urlmanagerChangeUrlRewriteRequestPathResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Change Url Rewrite Request Path
      tags:
      - Basic Operations
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /urlmanager/create_url_rewrite:
    post:
      description: Create a new URL rewrite configuration with customizable rules.
      operationId: UrlManager_CreateUrlRewrite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/urlmanagerCreateUrlRewriteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/urlmanagerUrlRewrite'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Create Url Rewrite
      tags:
      - Basic Operations
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /urlmanager/delete_url_rewrite:
    post:
      description: Delete an existing URL rewrite configuration.
      operationId: UrlManager_DeleteUrlRewrite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/urlmanagerDeleteUrlRewriteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/urlmanagerDeleteUrlRewriteResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Delete Url Rewrite
      tags:
      - Basic Operations
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /urlmanager/get_url_rewrite:
    post:
      description: Retrieve the details of a specific URL rewrite configuration.
      operationId: UrlManager_GetUrlRewrite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/urlmanagerGetUrlRewriteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/urlmanagerUrlRewrite'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Get Url Rewrite
      tags:
      - Basic Operations
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /urlmanager/list_url_rewrites:
    post:
      description: Retrieve a list of all URL rewrite configurations in your application.
      operationId: UrlManager_ListUrlRewrites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/urlmanagerListUrlRewritesRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/urlmanagerListUrlRewritesResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: List Url Rewrites
      tags:
      - Basic Operations
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /urlmanager/list_url_rewrites_by_target_paths:
    post:
      description: Retrieve URL rewrite configurations based on target paths.
      operationId: UrlManager_ListUrlRewritesByTargetPaths
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/urlmanagerListUrlRewritesByTargetPathsRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/urlmanagerListUrlRewritesByTargetPathsRequest'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: List Url Rewrites By Target Paths
      tags:
      - Basic Operations
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
  /urlmanager/resolve_url_rewrite:
    post:
      description: Resolve and retrieve the rewritten URL for a given input URL.
      operationId: UrlManager_ResolveUrlRewrite
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/urlmanagerResolveUrlRewriteRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/urlmanagerUrlRewrite'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: Unauthorized
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An internal error occurred is thrown when an incompatible payload
            is sent
        default:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/rpcStatus'
          description: An unexpected error response.
      summary: Resolve Url Rewrite
      tags:
      - Basic Operations
      x-codegen-request-body-name: body
      x-content-type: application/json
      x-accepts:
      - application/json
components:
  schemas:
    GetUrlRewriteRequestCompoundIdentifier:
      properties:
        context:
          type: string
        requestPath:
          type: string
      type: object
    ListUrlRewritesRequestFilter:
      properties:
        context:
          type: string
        requestPath:
          type: string
        targetPath:
          type: string
        redirectType:
          $ref: '#/components/schemas/UrlRewriteRedirectType'
      type: object
    UrlRewriteLinkRel:
      default: LinkRel_UNKNOWN
      enum:
      - LinkRel_UNKNOWN
      - LinkRel_NONE
      - LinkRel_CANONICAL
      - LinkRel_ALTERNATE
      type: string
    UrlRewriteRedirectType:
      default: RedirectType_UNKNOWN
      enum:
      - RedirectType_UNKNOWN
      - RedirectType_OK
      - RedirectType_PERMANENT
      - RedirectType_TEMPORARY
      type: string
    protobufAny:
      additionalProperties:
        type: object
      example:
        '@type': '@type'
      properties:
        '@type':
          type: string
      type: object
    rpcStatus:
      example:
        code: 0
        details:
        - '@type': '@type'
        - '@type': '@type'
        message: message
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/protobufAny'
          type: array
      type: object
    urlmanagerChangeUrlRewriteRequestPathRequest:
      properties:
        tenantId:
          description: Required.
          type: string
        context:
          description: Required.
          type: string
        requestPath:
          description: Required.
          type: string
        requestPathNew:
          description: Required.
          type: string
      type: object
    urlmanagerChangeUrlRewriteRequestPathResponse:
      type: object
    urlmanagerCreateUrlRewriteRequest:
      properties:
        tenantId:
          description: Required.
          type: string
        context:
          description: Required.
          type: string
        requestPath:
          description: Required.
          type: string
        targetPath:
          description: Required.
          type: string
        redirectType:
          $ref: '#/components/schemas/UrlRewriteRedirectType'
        linkRel:
          $ref: '#/components/schemas/UrlRewriteLinkRel'
      type: object
    urlmanagerDeleteUrlRewriteRequest:
      properties:
        tenantId:
          description: Required.
          type: string
        id:
          description: Required.
          type: string
      type: object
    urlmanagerDeleteUrlRewriteResponse:
      type: object
    urlmanagerGetUrlRewriteRequest:
      properties:
        tenantId:
          description: Required.
          type: string
        id:
          type: string
        compoundIdentifier:
          $ref: '#/components/schemas/GetUrlRewriteRequestCompoundIdentifier'
      type: object
    urlmanagerListUrlRewritesByTargetPathsRequest:
      example:
        linkRel: LinkRel_UNKNOWN
        tenantId: tenantId
        context: context
        targetPaths:
        - targetPaths
        - targetPaths
      properties:
        tenantId:
          description: Required.
          type: string
        targetPaths:
          description: Required.
          items:
            type: string
          type: array
        context:
          description: Optional.
          type: string
        linkRel:
          $ref: '#/components/schemas/UrlRewriteLinkRel'
      type: object
    urlmanagerListUrlRewritesByTargetPathsResponse:
      properties:
        urlRewrites:
          items:
            $ref: '#/components/schemas/urlmanagerUrlRewrite'
          type: array
      type: object
    urlmanagerListUrlRewritesRequest:
      properties:
        tenantId:
          description: Required.
          type: string
        filter:
          $ref: '#/components/schemas/ListUrlRewritesRequestFilter'
        pageSize:
          description: |-
            The maximum number of url rewrites to return. The service may return fewer than
            this value.
            If unspecified, at most 10 url rewrites will be returned.
            The maximum value is 200; values above 200 will be coerced to 200.
          format: int64
          type: integer
        pageToken:
          description: |-
            A page token, received from a previous `ListUrlRewrites` call.
            Provide this to retrieve the subsequent page.


            When paginating, all other parameters provided to `ListUrlRewrites` must match
            the call that provided the page token.
          type: string
      type: object
    urlmanagerListUrlRewritesResponse:
      example:
        urlRewrites:
        - linkRel: LinkRel_UNKNOWN
          tenantId: tenantId
          context: context
          targetPath: targetPath
          id: id
          redirectType: RedirectType_UNKNOWN
          requestPath: requestPath
        - linkRel: LinkRel_UNKNOWN
          tenantId: tenantId
          context: context
          targetPath: targetPath
          id: id
          redirectType: RedirectType_UNKNOWN
          requestPath: requestPath
        nextPageToken: nextPageToken
      properties:
        urlRewrites:
          items:
            $ref: '#/components/schemas/urlmanagerUrlRewrite'
          type: array
        nextPageToken:
          description: |-
            A token that can be sent as `page_token` to retrieve the next page.
            If this field is omitted, there are no subsequent pages.
          type: string
      type: object
    urlmanagerResolveUrlRewriteRequest:
      properties:
        tenantId:
          description: Required.
          type: string
        context:
          description: Required.
          type: string
        requestPath:
          description: Required.
          type: string
      type: object
    urlmanagerUrlRewrite:
      example:
        linkRel: LinkRel_UNKNOWN
        tenantId: tenantId
        context: context
        targetPath: targetPath
        id: id
        redirectType: RedirectType_UNKNOWN
        requestPath: requestPath
      properties:
        tenantId:
          type: string
        id:
          type: string
        context:
          description: |-
            Context field is part of the key.
            it's up to whoever is using the url manager to define it.
            e.g. locale or market or a concatenation of the two if needed.
          type: string
        requestPath:
          type: string
        targetPath:
          type: string
        redirectType:
          $ref: '#/components/schemas/UrlRewriteRedirectType'
        linkRel:
          $ref: '#/components/schemas/UrlRewriteLinkRel'
      type: object
  securitySchemes:
    Authorization:
      in: header
      name: Authorization
      type: apiKey
    standardAuthorization:
      flows:
        implicit:
          scopes: {}
      type: oauth2
x-original-swagger-version: "2.0"

